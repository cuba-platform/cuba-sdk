buildscript {
    ext.versions = [
            kotlin               : "1.2.71",
            cliCore              : "1.0.0",
            velocity             : "1.7",
            jCommander           : "1.72",
            jansi                : "1.17",
            guava                : "28.2-jre",
            jline                : "3.6.2",
            kodein               : "5.0.0",
            practicalxml         : "1.1.0",
            gson                 : "2.3.1",
            fuel                 : "1.15.1",
            maven                : "3.6.2",
            json                 : "20180813",
            nxrm3                : "3.21.1-01",
            commonsLang          : "2.4-cuba.0",
            commonsConfiguration : "1.10",
            commonsLogging       : "1.1.1",
            commonsLang3         : "3.5",
            commonsCompress      : "1.20",
            commonsCollections   : "3.2.2",
            kotlinXmlBuilder     : "1.6.0",
            jUnit                : "4.12",
            toolingApi           : "6.4.1",
            mvnrepo              : "1.1.0",
            mapdb                : "3.0.8",
            slf4j                : "1.7.10",
            eclipseCollections   : "7.0.0",
            elsa                 : "3.0.0-M5",
            j2objcAnnotations    : "1.3",
            failureaccess        : "1.0.1",
            checkerQual          : "2.10.0",
            errorProneAnnotations: "2.3.4",
            result               : "1.6.0",
            lz4                  : "1.3.0",
            plexus               : "3.2.1"

    ]

    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            credentials {
                username System.getenv('HAULMONT_REPOSITORY_USER') ?: 'cuba'
                password System.getenv('HAULMONT_REPOSITORY_PASSWORD') ?: 'cuba123'
            }
            url System.getenv('HAULMONT_REPOSITORY_URL') ?: 'https://repo.cuba-platform.com/content/groups/work'
        }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
    }
}

apply plugin: 'base'

allprojects {
    repositories {
        jcenter()
        mavenLocal()
        maven {
            credentials {
                username System.getenv('HAULMONT_REPOSITORY_USER') ?: 'cuba'
                password System.getenv('HAULMONT_REPOSITORY_PASSWORD') ?: 'cuba123'
            }
            url System.getenv('HAULMONT_REPOSITORY_URL') ?: 'https://repo.cuba-platform.com/content/groups/work'
        }
        maven {
            url "https://dl.bintray.com/cuba-platform/main"
        }
    }

}

subprojects {
    apply plugin: 'groovy'
    apply plugin: 'kotlin'
    apply plugin: 'maven'
    //so that we can use 'compile', 'testCompile' for dependencies

    sourceCompatibility = 11f
    targetCompatibility = 11

    group 'com.haulmont.cli.sdk'
    version rootProject.hasProperty('buildVersion') ? rootProject['buildVersion'] : '1.0-SNAPSHOT'

    dependencies {
        implementation "org.jetbrains.kotlin:kotlin-reflect:$versions.kotlin"
//    implementation "org.jetbrains.kotlin:kotlin-stdlib-common:$versions.kotlin"

        implementation("com.haulmont.cli.core:cli-core:$versions.cliCore")

        implementation "com.beust:jcommander:$versions.jCommander"
        implementation "org.jline:jline:$versions.jline"
        implementation "org.fusesource.jansi:jansi:$versions.jansi"

        // Using custom JAR without 'enum' package
        implementation("commons-lang:commons-lang:$versions.commonsLang")

        implementation("com.google.guava:guava:$versions.guava") {
            exclude(group: 'com.google.code.findbugs', module: 'jsr305')
        }

        implementation "org.kodein.di:kodein-di-generic-jvm:$versions.kodein"

        implementation("com.google.code.gson:gson:$versions.gson")

        implementation("commons-configuration:commons-configuration:$versions.commonsConfiguration") {
            exclude(group: 'commons-lang', module: 'commons-lang')
        }

        implementation("commons-logging:commons-logging:$versions.commonsLogging")

        implementation("org.json:json:$versions.json")
    }

    configurations {
        compile {
            exclude(group: 'org.jetbrains', module: 'annotations')
        }
    }

    [compileKotlin, compileTestKotlin].each {
        it.kotlinOptions.jvmTarget = '1.8'
    }
}